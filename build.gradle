buildscript {
    repositories {
        mavenCentral {
            metadataSources {
                mavenPom()
                artifact()
                ignoreGradleMetadataRedirection()
            }
        }
    }

    dependencies {
        classpath 'org.owasp:dependency-check-gradle:7.3.2'
    }
}

plugins {
    id 'application'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.github.ben-manes.versions' version '0.44.0'
    id 'java'
    id 'jacoco'
}

application {
    mainClass = 'com.between.Program'
    group = 'com.between'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2:2.1.214'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'net.bytebuddy:byte-buddy:1.12.19'
    testImplementation "org.mockito:mockito-core:4.9.0"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jar {
    enabled = false
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = file("$buildDir/reports/jacoco")
}



apply plugin: 'org.owasp.dependencycheck'

jacocoTestReport { // ./gradlew test jacocoTestReport from CLI
    dependsOn test // tests are required to run before generating the report
    group = "Reporting"
    reports {
        xml.required.set(true)
        csv.required.set(true)
        html.destination file("${buildDir}/reports/coverage")
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/between/Program.*',
            ])
        }))
    }
}
